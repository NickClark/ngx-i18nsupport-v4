{"version":3,"file":"i-xliff-merge-options.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/xliffmerge/i-xliff-merge-options.ts"],"names":[],"mappings":";AAAA;;;GAGG","sourcesContent":["/**\n * Created by roobm on 15.03.2017.\n * Interfaces for command line call and config file content.\n */\n\n/**\n * Options that can be passed as program arguments.\n */\nexport interface ProgramOptions {\n    quiet?: boolean;\n    verbose?: boolean;\n    profilePath?: string;\n    languages?: string[];\n}\n\n/**\n * Definition of the possible values used in the config file\n */\nexport interface IConfigFile {\n    // content is wrapped in \"xliffmergeOptions\" to allow to use it embedded in another config file (e.g. tsconfig.json)\n    xliffmergeOptions?: IXliffMergeOptions;\n}\n\nexport interface IXliffMergeOptions {\n    quiet?: boolean;   // Flag to only output error messages\n    verbose?: boolean;   // Flag to generate debug output messages\n    allowIdChange?: boolean; // Try to find translation even when id is missing\n    defaultLanguage?: string;    // the default language (the language, which is used in the original templates)\n    languages?: string[];   // all languages, if not specified via commandline\n    srcDir?: string;    // Directory, where the master file is\n    i18nBaseFile?: string; // Basename for i18n input and output, default is 'messages'\n    i18nFile?: string;  // master file, if not absolute, it is relative to srcDir\n    i18nFormat?: string; // xlf or xmb\n    encoding?: string;  // encoding to write xml\n    genDir?: string;    // directory, where the files are written to\n    angularCompilerOptions?: {\n        genDir?: string;    // same as genDir, just to be compatible with ng-xi18n\n    };\n    removeUnusedIds?: boolean;\n    supportNgxTranslate?: boolean;  // Flag, wether output for ngx-translate should be generated\n    ngxTranslateExtractionPattern?: string; // Criteria, what messages should be used for ngx-translate output\n      // see details on the documentation page https://github.com/martinroob/ngx-i18nsupport/wiki/ngx-translate-usage\n    useSourceAsTarget?: boolean; // Flag, whether source must be used as target for new trans-units\n    targetPraefix?: string; // Praefix for target copied from sourced\n    targetSuffix?: string; // Suffix for target copied from sourced\n    beautifyOutput?: boolean; // beautify output\n    preserveOrder?: boolean; // preserve order of new trans units\n    autotranslate?: boolean|string[]; // enable auto translate via Google Translate\n        // if it is an array, list of languages to autotranslate\n        // if it is true, autotranslate all languages (except source language of course)\n        // if it is false (default) no autotranslate\n    apikey?: string;    // API Key for Google Translate, required if autotranslate is enabled\n    apikeyfile?: string;    // file name where API Key for Google Translate can be read from\n}\n\n"]}
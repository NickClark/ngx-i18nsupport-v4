{"version":3,"file":"xml-reader.js","sourceRoot":"","sources":["../../../../projects/xliffmerge/src/xliffmerge/xml-reader.ts"],"names":[],"mappings":";;AAAA,mDAA6C;AAC7C;;;GAGG;AAEH,MAAa,SAAS;IAGlB;;;;;;OAMG;IACI,MAAM,CAAC,kBAAkB,CAAC,IAAY,EAAE,QAAiB;QAC5D,IAAI,CAAC,QAAQ,EAAE;YACX,QAAQ,GAAG,SAAS,CAAC,gBAAgB,CAAC;SACzC;QACD,IAAI,OAAO,GAAW,oBAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;QACpD,MAAM,aAAa,GAAG,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QACzD,IAAI,aAAa,KAAK,QAAQ,EAAE;YAC5B,uCAAuC;YACvC,OAAO,GAAG,oBAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;SAChD;QACD,OAAO;YACH,OAAO,EAAE,OAAO;YAChB,QAAQ,EAAE,aAAa;SAC1B,CAAC;IACN,CAAC;IAED;;;;;OAKG;IACK,MAAM,CAAC,eAAe,CAAC,SAAiB;QAC5C,MAAM,KAAK,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;QAC9C,IAAI,KAAK,GAAG,CAAC,EAAE;YACX,OAAO,IAAI,CAAC,gBAAgB,CAAC,CAAC,uCAAuC;SACxE;QACD,MAAM,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,8BAA8B;QACnF,OAAO,SAAS,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;IACrD,CAAC;;AAtCM,0BAAgB,GAAG,OAAO,CAAC;AADtC,8BAyCC","sourcesContent":["import {FileUtil} from '../common/file-util';\n/**\n * Created by martin on 10.03.2017.\n * Helper class to read XMl with a correct encoding.\n */\n\nexport class XmlReader {\n    static DEFAULT_ENCODING = 'UTF-8';\n\n    /**\n     * Read an xml-File.\n     * @param path Path to file\n     * @param encoding optional encoding of the xml.\n     * This is read from the file, but if you know it before, you can avoid reading the file twice.\n     * @return file content and encoding found in the file.\n     */\n    public static readXmlFileContent(path: string, encoding?: string): {content: string, encoding: string} {\n        if (!encoding) {\n            encoding = XmlReader.DEFAULT_ENCODING;\n        }\n        let content: string = FileUtil.read(path, encoding);\n        const foundEncoding = XmlReader.encodingFromXml(content);\n        if (foundEncoding !== encoding) {\n            // read again with the correct encoding\n            content = FileUtil.read(path, foundEncoding);\n        }\n        return {\n            content: content,\n            encoding: foundEncoding\n        };\n    }\n\n    /**\n     * Read the encoding from the xml.\n     * xml File starts with .. encoding=\"..\"\n     * @param xmlString xmlString\n     * @return encoding\n     */\n    private static encodingFromXml(xmlString: string): string {\n        const index = xmlString.indexOf('encoding=\"');\n        if (index < 0) {\n            return this.DEFAULT_ENCODING; // default in xml if not explicitly set\n        }\n        const endIndex = xmlString.indexOf('\"', index + 10); // 10 = length of 'encoding=\"'\n        return xmlString.substring(index + 10, endIndex);\n    }\n\n}\n\n"]}